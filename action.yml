name: "Setup Arsenal Image Mounter"
if: runner.os == 'Windows'
description: |
  Sets up the Arsenal Image Mounter for Windows and backs often-used paths with RAM disks
runs:
  using: "composite"
  steps:
    - name: Download and install Arsenal Image Mounter
      shell: bash
      run: |
        set -e

        cd ~/

        mkdir aim
        cd aim
        curl \
          --retry 5 \
          --retry-delay 5 \
          --fail \
          --retry-all-errors \
          -L \
          -C - \
          -o aim_ll.zip \
          https://github.com/ArsenalRecon/Arsenal-Image-Mounter/raw/5961f922c5b99ec29acc4af4b60b909b402eed95/Command%20line%20applications/aim_ll.zip
        echo "a628fd0bb4b1657b2b89fd8972937b4d9c4b1292ea16764208fa63fc0ce84d54 aim_ll.zip" | sha256sum --check
        # unzip properly extracts everything but warns that "aim_ll.zip appears to use backslashes as path separators"
        # it then exits with a non-zero status code. the warning is harmless, so we ignore it.
        unzip aim_ll.zip || true
        mkdir ~/bin
        mv x64/* ~/bin

        curl \
          --retry 5 \
          --retry-delay 5 \
          --fail \
          --retry-all-errors \
          -L \
          -C - \
          -o DriverFiles.zip \
          https://github.com/ArsenalRecon/Arsenal-Image-Mounter/raw/5961f922c5b99ec29acc4af4b60b909b402eed95/DriverSetup/DriverFiles.zip
        echo "cc03472b689f23b1c66d1764b7a12e7212146b5c1f70e2613666efcd93b97192 DriverFiles.zip" | sha256sum --check
        # like above
        unzip DriverFiles.zip -d DriverFiles || true
        aim_ll --install DriverFiles

    - name: Create RAM Disks
      shell: bash
      run: |
        # RAM disk for postgres mounted on R:
        aim_ll -a -s "20%" -m R: -p "/fs:ntfs /q /y"

        # RAM disk for temp files. It's used by actions/cache, actions/setup-go, etc.
        # We need to persist the existing contents because some actions rely on it.
        mkdir "$RUNNER_TEMP"_tmp
        cp -r "$RUNNER_TEMP"/. "$RUNNER_TEMP"_tmp
        rm -rf "$RUNNER_TEMP"/*
        aim_ll -a -s "20%" -m "$RUNNER_TEMP" -p "/fs:ntfs /q /y"
        cp -r "$RUNNER_TEMP"_tmp/. "$RUNNER_TEMP"
        rm -rf "$RUNNER_TEMP"_tmp
